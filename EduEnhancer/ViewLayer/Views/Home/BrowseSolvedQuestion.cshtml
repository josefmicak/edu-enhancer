@model IEnumerable<DomainModel.SubquestionResult>

@using DomainModel;
@using Common;

@{
    SubquestionResult subquestionResult = new SubquestionResult();
    if (ViewBag.subquestionTemplateId == null)
    {
        subquestionResult = @Model.First();
    }
    else
    {
        foreach (var item in Model)
        {
            if (item.SubquestionResultId == int.Parse(ViewBag.subquestionTemplateId))
            {
                subquestionResult = item;
                break;
            }
        }
    }

    if (subquestionResult == null)
    {
        throw Exceptions.SubquestionResultNotFoundException;
    }

    SubquestionTemplate subquestionTemplate = subquestionResult.SubquestionTemplate;
    EnumTypes.NegativePoints negativePoints = subquestionTemplate.QuestionTemplate.TestTemplate.NegativePoints;

    ViewData["Title"] = "Prohlížení vyřešené otázky " + subquestionResult.QuestionTemplateId;

    bool singleSubquestion = true;
    if(Model.Count() > 1)
    {
        singleSubquestion = false;
    }

    double questionPoints = 0;
    foreach(var item in Model.First().QuestionResult.QuestionTemplate.SubquestionTemplates)
    {
        questionPoints += item.SubquestionPoints;
    }
    if (negativePoints == EnumTypes.NegativePoints.EnabledForQuestion && subquestionResult.StudentsPoints < 0)
    {
        questionPoints = 0;
    }

    string studentsSubquestionPoints = subquestionResult.StudentsPoints.ToString() + " / " + subquestionTemplate.SubquestionPoints;

    double studentsQuestionPoints = 0;
    string studentsQuestionPointsString = "";
    foreach(var item in Model)
    {
        if (item.StudentsPoints < 0 && negativePoints == EnumTypes.NegativePoints.Disabled)
        {
            //in case negative points are disabled, the minimum points for every subquestion is 0
            studentsQuestionPoints += 0;
        }
        else
        {
            studentsQuestionPoints += item.StudentsPoints;
        }
    }
    if (negativePoints == EnumTypes.NegativePoints.Disabled && studentsQuestionPoints < 0)
    {
        studentsQuestionPoints = 0;
    }
    studentsQuestionPointsString = studentsQuestionPoints.ToString() + " / " + questionPoints.ToString();
}

<div class="text-center">
    <h1>Prohlížení vyřešené otázky @subquestionResult.QuestionTemplateId</h1>

    <div id="question-template">
        <h2>Parametry otázky</h2>
        <table>
            <tr>
                <th>Nadpis</th>
                <td>@Model.First().QuestionResult.QuestionTemplate.Title</td>
            </tr>
            <tr>
                <th>Počet podotázek</th>
                <td>@Model.Count()</td>
            </tr>
            <tr>
                <th>Počet bodů získaných studentem</th>
                <td>@studentsQuestionPointsString</td>
            </tr>
        </table>
    </div>

    <div id="subquestion-template">
        <h2>Parametry podotázky</h2>
        <table>
            <tr>
                <th>Typ podotázky</th>
                <td>@ViewBag.SubquestionTypeTextArray[@Convert.ToInt32(subquestionTemplate.SubquestionType)]</td>
            </tr>
            <tr>
                <th>Počet bodů za podotázku</th>
                <td>@studentsSubquestionPoints</td>
            </tr>
            @{
                if (subquestionTemplate.ImageSource != null)
                {
                    <tr><td colspan="2"><img class="image" src="@subquestionTemplate.ImageSource"></td></tr>
                }
            }
            <tr>
                <th>Text podotázky</th>
                <td>@subquestionTemplate.SubquestionText</td>
            </tr>
            <tr>
                <th colspan="2">Možné odpovědi</th>
            </tr>
            @{
                if(@subquestionTemplate.SubquestionType == EnumTypes.SubquestionType.FreeAnswer)
                {
                    <tr><td colspan="2">Jedná se o otevřenou otázku, neobsahuje výběr z možností, odpovědi je nutné ověřit manuálně.</td></tr>
                }
                else if (@subquestionTemplate.SubquestionType == EnumTypes.SubquestionType.FreeAnswerWithDeterminedCorrectAnswer)
                {
                    <tr><td colspan="2">Otázka neobsahuje výběr z možností.</td></tr>
                }
                else
                {
                    foreach(string possibleAnswer in @subquestionTemplate.PossibleAnswers)
                    {
                        <tr><td colspan="2" class="possible-answer-item">@possibleAnswer</td></tr>
                    }
                }
            }
            @{
                if(@subquestionTemplate.CorrectAnswers.Length > 0)
                {
                    <tr>
                        <th colspan="2">Správné odpovědi</th>
                    </tr>
            
                    foreach(string correctAnswer in @subquestionTemplate.CorrectAnswers)
                    {
                        <tr><td colspan="2" class="correct-answer-item">@correctAnswer</td></tr>
                    }
                }
            }
        </table>
    </div>

    <div id="subquestion-selection">
        <h2>Výběr podotázky</h2>
        <form method="POST">
            <input type="hidden" value="@subquestionTemplate.QuestionTemplate.QuestionTemplateId" name="questionTemplateId">
            <input type="hidden" value="@subquestionTemplate.OwnerLogin" name="ownerLogin">

            @{
                string subquestionLabel = "";
                if(Model.Count() > 1)
                {
                    subquestionLabel = "Vyberte podotázku ze seznamu";
                }
                else
                {
                    subquestionLabel = "Tato otázka obsahuje pouze jednu podotázku.";
                }
                <p>@subquestionLabel</p>
            }

            <select class="input" name="subquestionTemplateId" id="subquestionTemplateId" disabled="@singleSubquestion">
                @{
                    int i = 0;
                    foreach (var item in Model)
                    {
                        if(item.SubquestionTemplate.SubquestionText.Length > 60)
                        {
                            <option id="subquestion-item-@(i+1)" value="@item.SubquestionResultId">@(item.SubquestionTemplate.SubquestionText.Substring(0, 60) + " ...")</option>
                        }
                        else
                        {
                            <option id="subquestion-item-@(i+1)" value="@item.SubquestionResultId">@item.SubquestionTemplate.SubquestionText</option>
                        }
                        i++;
                    }
                }
            }
            </select>

            <input class="button" id="selectSubquestionButton" title="Vybrat" type="submit" value="Vybrat" disabled="@singleSubquestion">

        </form>
    </div>

    <div id="subquestion-result">
        <h2>Vaše odpověď</h2>
        @{
            foreach(var answer in subquestionResult.StudentsAnswers)
            {
                <p>@answer</p>
            }
        }
    </div>
</div>

<div id="backBtn"><a asp-action="BrowseSolvedTest"
        asp-route-testResultId="@subquestionResult.TestResultId"
        asp-route-ownerLogin="@subquestionResult.OwnerLogin">Zpět</a></div>

<div id="signOutBtn"><a asp-controller="Account" asp-action="GoogleSignOut">Odhlásit se</a></div>
