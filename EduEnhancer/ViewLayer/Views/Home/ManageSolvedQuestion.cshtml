@model IEnumerable<DomainModel.SubquestionResult>

@using DomainModel;
@using Common;
@using System.Globalization

@{
    SubquestionResult subquestionResult = new SubquestionResult();
    int subquestionNumber = 0;
    if(ViewBag.subquestionResultId == null)
    {
        subquestionResult = @Model.First();
    }
    else
    {
        foreach (var item in Model)
        {
            if (item.SubquestionResultId == ViewBag.subquestionResultId)
            {
                subquestionResult = item;
                break;
            }
            subquestionNumber++;
        }
    }

    if (subquestionResult == null)
    {
        throw Exceptions.SubquestionResultNotFoundException;
    }

    SubquestionTemplate subquestionTemplate = subquestionResult.SubquestionTemplate;
    EnumTypes.NegativePoints negativePoints = subquestionTemplate.QuestionTemplate.TestTemplate.NegativePoints;

    ViewData["Title"] = "Správa vyřešené otázky";

    bool singleSubquestion = true;
    if(Model.Count() > 1)
    {
        singleSubquestion = false;
    }

    double questionPoints = 0;
    foreach(var item in Model.First().QuestionResult.QuestionTemplate.SubquestionTemplates)
    {
        questionPoints += item.SubquestionPoints;
    }

    string studentsSubquestionPoints = subquestionResult.StudentsPoints.ToString() + " / " + subquestionTemplate.SubquestionPoints;

    double studentsQuestionPoints = 0;
    string studentsQuestionPointsString = "";
    foreach(var item in Model)
    {
        if (item.StudentsPoints < 0 && negativePoints == EnumTypes.NegativePoints.Disabled)
        {
            //in case negative points are disabled, the minimum points for every subquestion is 0
            studentsQuestionPoints += 0;
        }
        else
        {
            studentsQuestionPoints += item.StudentsPoints;
        }
    }
    if (negativePoints == EnumTypes.NegativePoints.Disabled && studentsQuestionPoints < 0)
    {
        studentsQuestionPoints = 0;
    }
    studentsQuestionPoints = Math.Round(studentsQuestionPoints, 2);
    questionPoints = Math.Round(questionPoints, 2);
    studentsQuestionPointsString = studentsQuestionPoints.ToString() + " / " + questionPoints.ToString();

    string answerCorrectString = "";
    switch(subquestionResult.AnswerStatus)
    {
        case EnumTypes.AnswerStatus.NotDetermined:
            answerCorrectString = "Správnost odpovědi nebyla určena.";
            break;
        case EnumTypes.AnswerStatus.Correct:
            answerCorrectString = "Správná odpověď.";
            break;
        case EnumTypes.AnswerStatus.PartiallyCorrect:
            answerCorrectString = "Částečně správná odpověď.";
            break;
        case EnumTypes.AnswerStatus.Incorrect:
            answerCorrectString = "Nesprávná odpověď.";
            break;
        case EnumTypes.AnswerStatus.NotAnswered:
            answerCorrectString = "Správnost odpovědi nebyla určena - otázka nezodpovězena";
            break;
        case EnumTypes.AnswerStatus.CannotBeDetermined:
            answerCorrectString = "Správnost odpovědi nelze určit.";
            break;
    }

    bool userRequestedPointsSuggestion = false;
    if (ViewBag.SuggestedSubquestionPoints != null)
    {
        userRequestedPointsSuggestion = true;
    }

    int subquestionType = (int)subquestionTemplate.SubquestionType;
    string suggestedSubquestionPointsString = ViewBag.SuggestedSubquestionPoints;
    double suggestedSubquestionPoints = 0;
    if (userRequestedPointsSuggestion)
    {
        if (subquestionType == 0 || subquestionType == 5)
        {
            suggestedSubquestionPointsString = "Chyba: pro tento typ podotázky není tato funkce dostupná";
        }
        else
        {
            if (double.TryParse(suggestedSubquestionPointsString, out _) && double.Parse(suggestedSubquestionPointsString) > subquestionTemplate.SubquestionPoints)
            {
                suggestedSubquestionPoints = subquestionTemplate.SubquestionPoints;
                suggestedSubquestionPointsString = suggestedSubquestionPoints.ToString();
            }
        }
    }
}

<div class="text-center">
    <h1>Správa vyřešené otázky</h1>

    <div id="question-template">
        <h2>Parametry otázky</h2>
        <table>
            <tr>
                <th>Nadpis</th>
                <td>@Model.First().QuestionResult.QuestionTemplate.Title</td>
            </tr>
            <tr>
                <th>Počet podotázek</th>
                <td>@Model.Count()</td>
            </tr>
            <tr>
                <th>Počet bodů získaných studentem</th>
                <td>@studentsQuestionPointsString</td>
            </tr>
        </table>
    </div>

    <div id="subquestion-template">
        <h2>Parametry podotázky</h2>
        <table>
            <tr>
                <th>Typ podotázky</th>
                <td>@ViewBag.SubquestionTypeTextArray[@Convert.ToInt32(subquestionTemplate.SubquestionType)]</td>
            </tr>
            <tr>
                <th>Počet bodů za podotázku</th>
                <td>@studentsSubquestionPoints</td>
            </tr>
            @{
                if (subquestionTemplate.ImageSource != null)
                {
                    <tr><td colspan="2"><img class="image" src="@subquestionTemplate.ImageSource"></td></tr>
                }
            }
            <tr>
                <th>Text podotázky</th>
                <td>@subquestionTemplate.SubquestionText</td>
            </tr>
            <tr>
                <th colspan="2">Možné odpovědi</th>
            </tr>
            @{
                if (@subquestionTemplate.SubquestionType == EnumTypes.SubquestionType.FreeAnswer)
                {
                    <tr><td colspan="2">Jedná se o otevřenou otázku, neobsahuje výběr z možností, odpovědi je nutné ověřit manuálně.</td></tr>
                }
                else if (@subquestionTemplate.SubquestionType == EnumTypes.SubquestionType.FreeAnswerWithDeterminedCorrectAnswer)
                {
                    <tr><td colspan="2">Otázka neobsahuje výběr z možností.</td></tr>
                }
                else
                {
                    foreach(string possibleAnswer in @subquestionTemplate.PossibleAnswers)
                    {
                        <tr><td colspan="2" class="possible-answer-item">@possibleAnswer</td></tr>
                    }
                }
            }
            @{
                if(@subquestionTemplate.CorrectAnswers.Length > 0)
                {
                    <tr>
                        <th colspan="2">Správné odpovědi</th>
                    </tr>
            
                    foreach(string correctAnswer in @subquestionTemplate.CorrectAnswers)
                    {
                        <tr><td colspan="2" class="correct-answer-item">@correctAnswer</td></tr>
                    }
                }
            }
        </table>
    </div>

    <div id="subquestion-selection">
        <h2>Výběr podotázky</h2>
        <form method="POST">
            <input type="hidden" value="@subquestionTemplate.QuestionTemplate.QuestionTemplateId" name="questionTemplateId">
            <input type="hidden" value="@subquestionResult.SubquestionResultId" name="currentSubquestionResultId">
            <button type="submit" id="previousSubquestion" value="previousSubquestion" name="action">Předchozí</button>
            <button type="submit" id="nextSubquestion" value="nextSubquestion" name="action">Následující</button>
            @{
                string subquestionLabel = "";
                if(Model.Count() > 1)
                {
                    subquestionLabel = "Vyberte podotázku ze seznamu";
                }
                else
                {
                    subquestionLabel = "Tato otázka obsahuje pouze jednu podotázku.";
                }
                <p>@subquestionLabel</p>
            }

            <select class="input" name="subquestionResultId" id="subquestionResultId" disabled="@singleSubquestion">
                @{
                    int i = 0;
                    foreach (var item in Model)
                    {
                        if(item.SubquestionTemplate.SubquestionText.Length > 60)
                        {
                            <option id="subquestion-item-@(i+1)" value="@item.SubquestionResultId">@(item.SubquestionTemplate.SubquestionText.Substring(0, 60) + " ...")</option>
                        }
                        else
                        {
                            <option id="subquestion-item-@(i+1)" value="@item.SubquestionResultId">@item.SubquestionTemplate.SubquestionText</option>
                        }
                        i++;
                    }
                }
            }
            </select>

            <input class="button" id="selectSubquestionButton" title="Vybrat" type="submit" value="Vybrat" disabled="@singleSubquestion">

        </form>
    </div>

    <div id="subquestion-result">
        <h2>Studentova odpověď</h2>
        <table>
            @{
                foreach (var answer in subquestionResult.StudentsAnswers)
                {
                    <tr><td>@answer</td></tr>
                }
            }
        </table>
        
        <p>@answerCorrectString</p>
    </div>

    <div id="subquestion-result-points">
        <h2>Upravit body</h2>
        <p>@ViewBag.Message</p>
        <form method="POST" onsubmit="onSubquestionResultPointsFormSubmission()">
            <input type="hidden" value="@subquestionResult.QuestionResult.QuestionResultId" name="questionResultId">
            <input type="hidden" value="@subquestionResult.SubquestionResultId" name="subquestionResultId">
            <input type="hidden" value="@subquestionTemplate.SubquestionPoints" name="subquestionPoints">
            <input type="hidden" value="@negativePoints" name="negativePoints">
            <input type="hidden" value="@subquestionType" name="subquestionType">

            <p>Počet bodů získaných studentem: <input class="input-number" type="text" id="students-points" required name="studentsPoints" value="@subquestionResult.StudentsPoints.ToString()"></p>
            <p>Počet bodů (automatické vyhodnocení): @subquestionResult.DefaultStudentsPoints</p>
            @{
                if (userRequestedPointsSuggestion)
                {
                    <p>Počet bodů (doporučení AI): @suggestedSubquestionPointsString</p>
                }
                else
                {
                    <p>
                        <div id="suggested-points-label">
                            Doporučený počet bodů za otázku:
                        </div>
                        <div id="suggested-points-button">
                            <button type="submit" value="getPointsSuggestion" name="action">Zobrazit</button>
                        </div>
                    </p>
                }
            }
            <button type="submit" value="setPoints" name="action">Uložit</button>
        </form>
    </div>
</div>

<script src="/js/site.js"></script>
@{
    <script>
        questionTemplatePagePostProcessing(@subquestionNumber, @Model.Count(), 'subquestionResultId');
    </script>
}

<div id="backBtn"><a asp-action="ManageSolvedTest"
       asp-route-testResultId="@subquestionResult.QuestionResult.TestResultId">Zpět</a>
</div>

<div id="signOutBtn"><a asp-controller="Account" asp-action="GoogleSignOut">Odhlásit se</a></div>
